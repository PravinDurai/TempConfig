################################################################################
#
# Security Binding descriptor
#
# [Policy]|[URI]|[Transport]|[FacadeOperation]|[Binding]|[Flow]|[service]|[Partner]
#
# Policy - Name of the policy as specify in policy mapping configuration file.
# uri - the uri of the FacadeOperation that the policy is applied to.
# Transport - the transport of the request (HTTP, HTTPS, JMS, or SOAP)
# FacadeOperation - the FacadeOperation that the policy is applied to.
#             FacadeOperation is the opName specified in FacadeOperation.cfg
# Binding - the binding component that the policy is applied to - service (northbound) or reference (southbound)
# Flow - the flow of the request - in or out.
# Service - the service as define in the service configuration file
#           Service is the serviceId without "service_" specified in TargetOperation.cfg
#           Optional - if not specified, wll apply to all service with the given FacadeOperation
# Partner - the partner of the FacadeOperation
#           Optional - if not specified, will applied to all partner
#
################################################################################

# The following are example of different combination of policySets for various scenarios.
# Please refer to the policy for detail policy configuration.
# Un-comment binding description in the set to see the policy enforment for that scenario.

# UsernameToken Authentication
#AuthenticationByUsernameToken|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|service|in||
#VerifyUsernameToken|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|service|in||anon

# SAML Authentication
#AuthenticationBySaml|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|service|in|http.GetBooksByAuthor|anon

# Authorization By Role
#AuthenticationByUsernameToken|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|GetBooksByAuthor|service|in|http.GetBooksByAuthor|anon
#AuthorizationByRole|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|GetBooksByAuthor|service|in|http.GetBooksByAuthor|anon

# Encryption and Decryption
#Encryption|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|service|out|http.GetBooksByAuthor|anon
#Decryption|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|service|in|http.GetBooksByAuthor|anon
#Encryption|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|reference|out|http.GetBooksByAuthor|anon
#Decryption|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|reference|in|http.GetBooksByAuthor|anon

# Sign and Verify signature
#Sign|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|reference|out|http.GetBooksByAuthor|anon
#Sign|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|service|out|http.GetBooksByAuthor|tibco
#VerifySignature|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|service|in|http.GetBooksByAuthor|anon

# Fixed Credential Mapping
# Note that the GetBooksByAuthor must be able to verify the UsernameToken from the policy applied.
#CredentialMappingByUsernameToken|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|reference|out|http.GetBooksByAuthorX|tibco

# SAML Credential Mapping
# Note that the GetBooksByAuthor must be able to verify the SAML Token from the policy applied.
#CredentialMappingBySaml|/ServerProcesses/GetBooksByAuthorEndpoint|SOAP|queryBookByAuthorBW|reference|out|http.GetBooksByAuthor|anon

# OAuth
#AuthenticationByOAuth|/facebookPing|HTTP|facebook_ping|service|in|http.Facebook_ping|
#CredentialMappingByOAuth|/asg/oauth/me|HTTP|OAuthRedirect|reference|out|http.Facebook_ping|
